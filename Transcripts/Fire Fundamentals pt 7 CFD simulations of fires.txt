 Hello everybody, welcome to the Fire Science Show. I'm Vojtech and today I'm going to take you again into the fundamentals of fire science. In this episode, we are talking CFD, Computational Fluid Dynamics. And there's a hell of a challenge in front of me because I have to explain it to the listeners without putting a single differential equation on the backboard. I don't have a backboard in here, but I mean, it kind of makes it interesting, and it kind of forces me to take a different angle on discussing this very important subject. So what's CFD? Everyone knows it's cartoons for directors, colorful fluid dynamics. It's the garbage in, garbage out models. Everyone can crack a good joke about CFD, and to some extent, it's justified. CFD is overwhelmingly used in fire science and fire safety engineering, but I don't think an overwhelming majority of the engineers actually understands this methodology. I actually think there's a very, very few people who would really, really understand CFD and its mathematical foundation. But I honestly think you do not need to be able to formulate Neiberg-Stokes equation for visit flow to actually use CFD. I think there's a big difference between being a developer of codes and someone who is researching or using fundamental fluid dynamics and just the user of the model. I believe there is a huge value in understanding to some extent what the model does. And in this crash course, in this one hour, I'll try to give you some of this knowledge in the easiest form I know. And perhaps after this episode, you'll be inspired to seek more on your own, or perhaps you'll have enough to understand your simulations and outputs a little better than before hearing this episode. I gave this talk to the Polish audience two or three weeks ago. Only 10% of them felt asleep, so I think this is a spectacular result. So to 90% of you, let's have some fun with CFD, and to 10% of you, well, good night, and I just hope you're not driving now. Anyway, let's go. Well, good night, and I just hope you're not driving now. Anyway, let's go. Welcome to the Firesize Show. My name is Wojciech Wigrzy≈Ñski, and I will be your host. Thank you. and fire engineering expertise with colleagues working across the world to help protect people, property, and environment. Established in the UK in 2016 as a startup business of two highly experienced fire engineering consultants, the business has grown phenomenally in just seven years with offices across the country in seven locations from Edinburgh to Bath and now employing more than a hundred professionals. Colleagues are on a mission to continually explore the challenges that fire creates for clients and society, applying the best research, experience and diligence for effective tailored fire safety solutions. In 2024, OFR will grow its team once more and is always keen to hear from industry professionals who would like to collaborate on fire safety futures this year, get in touch at OFRConsultants.com. Oh boy, so here we are. CFD, I'm really good at picking difficult subjects for myself to discuss with you, but as I said in the intro, there's a huge value in understanding to some extent how computers calculate fires. And if you think about it for a second, it's quite mesmerizing, actually. Because when you're doing fire simulation, the computer does not know you're doing fire simulation. Sure, you can put fire in the title of your case file, but it doesn't necessarily convey to the computer what's the point of your analysis. It just has some fundamental laws of physics described with partial differential equations in it, with some very clever computational mechanisms, and some other mechanisms that allow it to calculate this in three-dimensional space and time. And because the flow field inside your computer goes through pretty much the same physical phenomena, it's subject to the same physical laws as the fire that's happening in the real world. The outcome is supposedly the same. It's kind of beautiful that we have technology, we have the ability to actually look into that. If you look into human history a few hundred years ago, the first dream of simulating environment was obviously the weather forecasting. And if I'm not wrong, some hundred years ago, weather forecasting has been punishable by death. It was a criminal offense because it was on the edge of being a wizard or a sorcerer or a witch. I guess the latter one is the one that gets burned. Then in 1920s, there was a British gentleman, Louis Fry Richardson. He's one of the fathers of computational wind engineering and weather forecasting. And Richardson had this dream of building, he called it the Weather Forecast Factory. It was supposed to be a massive building in the shape of a dome, which would represent the planet Earth. Like, if you imagine yourself a huge, huge dome inside of it, there would be balconies all around it, and on those balconies there would be sitting people called computers, people who would compute, and those people would calculate some hydrostatic pressures and winds and some basic fundamental description of the flows happening in the region of the globe that they were sitting at, at their balcony. And then every few minutes, they will switch this data with the person that's sitting on the next balcony, and that's how they would transfer the data to them. And by doing that, he perceived that you could actually predict weather on a global scale by doing that, by simulating every end of the earth independently and just exchanging information between computers, the people who computed back then. What a dream. That was 30, 40 years before the first formulation of CFD was possible due to the development of computers. I read somewhere that Richardson has lived to the time where this is actually to some extent possible and that he was mesmerized by the new achievement of humanity, that actually his dream kind of came true. Not in the way that he wanted, not in a massive building where people are computing weather, but in something we call today a computer. Now, today, if you think about computational fluid dynamics and fires, I may say we are kind of blessed, you know, or let me start it from a different way. I'm a user of software called Ansys Fluent. Ansys is one of the best recognized CFD packages that you can buy. It's quite expensive, actually. Anyway, ANSYS has all of the models. Like, if there exists a model defined for the using CFD and computational fluid dynamics, it's in there. I have at least 12 basic turbulence models, and every of them has a submodel. I have multiple radiation, combustion, flow models. I have different formulations. It's insane. You can probably set up a simulation in a thousand ways. But when I start my CFD analysis, when I start my project, I open the software, I click new button to start a new simulation and what I get is an empty page. It doesn't have any model. It doesn't have anything in it. It's my duty from this monstrous collection of models to pick the ones that I need to solve my problem. And that's my responsibility. It's actually quite tough. The first time you meet Ansys Fluent, it's like hitting a truck up front. It's really challenging software to learn, but fantastic once you master it. Now, why I said fire engineers are blessed? Because we have this magnificent software called FDS, Fire Dynamic Simulator, from the NIST, National Institute of Standards and Technology in the US, and VTT in Finland. Quite a spectacular piece of software. And I like to think about FDS as having this, you know, fantastic, well fit in physics concierge to whom you say you need to carry a fire simulation. And the concierge tells you, sir, I have chosen the best set of models for you to solve your problem. They should work just fine. And you don't bother with which model you choose. You just take what's in there. That's a true blessing. And if you have never used any other software than FDS, where you have to actually set it up by yourself, you will not know how blessed we are. So thank you very much, Nist. And I can only recommend you listening to the episode with Kevin McGrattan where we've discussed the origins of FDS and how this thing was built from literally 70s or 80s up to now, how this was growing and developing to the point where you can just go into their website and download the most sophisticated, best-cattered package of models to use for fire simulations out there. But this blessing is also a challenge, you know. It's a challenge because it also enables someone who has absolutely zero knowledge to start the package. And that person will get a reasonable set of models. It's just they will not understand what the models do, what are they for, and what you can achieve with them. And for me, when I think about simulations, the worst simulation is not the one that's obviously wrong. It's not the one in which the temperature in fire is negative or in which the pressures go into millions of pascals or one that simply crashes through to instabilities. There's not always the fault of the user. This is not the worst simulation. The worst simulation is one that looks just fine, that looks like a real simulation, that looks like a reasonable outcome, but is absolutely wrong in its predictions. That's a very bad simulation, and it takes a lot of skill to actually pick those up. And that's the reason why I'm standing here in front of you, in front of the microphone, because I really hope that we all understand these models a little bit better and use them better because there's a huge responsibility on us on our analysis. They have to be good. They are meant to save lives. We cannot fail there. So let's go there. What is CFD? If you look in some sort of dictionary, you'll find the CFD as a branch of fluid mechanics that uses numerical analysis and algorithms to solve and analyze problems that involve fluid flows. Those calculations are carried with computers and simulate the interaction of liquids and gases with surfaces defined by boundary conditions. That's a very nice definition, actually. What it is in practice? In practice, it's a computer code that has loads of physics written inside in form of mathematical equations that uses concept of discretization of space and time, which means that it subdivides times and space into smaller bits in terms of space into so-called cells or elements, mesh elements, in terms of time, into consecutive time steps. And given some initial and boundary conditions, the initial state of the environment in the model part of the world inside the model, it can predict the change within this environment as a function of time and space. That's pretty much it. It uses a lot of clever mathematics, a lot of clever physics, but some models are very fundamental, and in every single CFD analysis you will find them. Of course, to use CFD, you have to first define the problem, you have to understand the models that you're using, you have to be able to interpret the outputs. But let's put this aside. Let's just focus on the machinery inside a CFD solver. So in every solver, the key elements of it will be, I call them the conservation equations. They are manifestations of the basic fundamental laws of physics that define how mass and energy flows within simulation in the long short. The first of such laws is the law for conservation of mass, and we sometimes call it the continuity equation. The conservation of mass basically means that if you imagine a group of cells within your CFD model, cells like think of a Rubik's cube, a bunch of cuboids put along each other so they touch by the walls and by the corners, and you basically solve what's going from one cuboid to another, like in Richardson's balconies, from one balcony to another, the continuity means that the mass cannot be destroyed in that process and cannot appear from nowhere. There has to be a reason why a mass appeared in the model. There has to be a reason why a mass disappears from the model. So how can mass appear? You have some soul storm. You inject something into your model. That's how you put the mass into the model. And the same way the mass disappears. It disappears by extraction. You have to have a surface or a point in space in which you define that at this point, the mass is able to get removed from the model. It's quite paramount because it means that if you have a space where you don't have any outflows, the mass will just be increasing in your domain if you keep pushing it in, and eventually you'll increase the pressures and consequences will follow. In simulation, you may go into millions of pascals. In reality, something will eventually break. You have to be aware of that. It also means that the mass cannot just randomly disappear. In the real world, when the mass randomly disappears, it's usually a nuclear explosion, and we definitely don't want to go there with fire simulations, but mass simply cannot disappear. And the CMD model is conserving that. Its calculations are following this very simple principle. The mass cannot disappear. It can move from one element to another. It can be injected. It can be extracted. But it cannot just disappear. The same with energy. The exact same principle and here the conservation of energy would be, let's say, the numerical description of the first law of thermodynamics. The energy cannot disappear or appear from somewhere. If it appears in the model, it appears from my chemical reactions of the fire. Or perhaps I have a radiator that puts the energy inside. Or perhaps I have inlet that puts warm air into my cold compartment. And that's how I introduce energy to my building. But it can't magically appear or disappear in your model. The energy must be conserved, and only then we are capable of solving the hidden mass transfer in the space that we are interested in. Very fundamental. The third conservation equation, that's a little more difficult. This is the conservation of momentum, and in a way, it's application of the Newton's second law of motion. It kind of means that if you put a force to a body, the body will accelerate, and it will not stop randomly. The momentum has to be transferred somewhere. And why it's complex? Because we're talking about fluids. We're talking about gas phase, air, smoke. This is all gases and all fluids. Now, if you think about it, if you push air, yes, you're moving air, but it's not that you're taking a chunk of air and throwing it forward. You are putting momentum into air surrounding you, and this momentum is eventually dissipated in the air that surrounds you. This is because the flow of air in fire cases in general is turbulent in its nature, and there is no direct way for this momentum to be transferred. It's transferred because of the viscosity, and it's transferred through those little swills. If you put your hand in the bathtub full of water and just swipe through the surface of the water, you'll see how small vortices are forming. If you take a very close look into the movement of smoke in a smoke plume, you will see that smoke plume is in fact a collection of small whirls that are flowing up and spinning as they go. And if you had the ability to zoom into such a whirl, if you zoomed into the edge of this whirl, what you would find? You would find smaller whirls, a collection of smaller whirls. Suddenly the edge is not a sharp edge of the whirl, but it has smaller wheels on it, which then you can imagine they have smaller wheels on them. And so and so and so until the smallest size of the eddy at something that we technically call the columnograph scale, that is extremely tiny microscopic eddies that you find in the end. And this is how momentum is transferred in the flow of fluid, in the flow of air, in the flow of smoke. This means that the formulation of this equation is not as simple. I put a force onto my body, onto my mass, and I get acceleration. It's much more complex because this happens continuously in almost all directions in quite a chaotic manner, in quite a chaotic fashion. This is why this is not a simple solution. If this was so simple, boy, so many sports would be very boring. F1, bicycle racing, all those where aerodynamics are important. This is not simple to solve those equations. But yet we have some ways to do that. So we are capable of doing that with great success. So three very fundamental laws, the conservation of mass, energy, and momentum. Now I've mentioned already what's turbulence. I've once heard some professor define turbulence like turbulence is pretty much like pornography, quite difficult to define, but everyone's pretty much familiar with the concept. I'm not sure if that's the best definition you can get, but it kind of touches it. It's very difficult to define turbulence in a simple term, but yeah, what I've just said with the motion of air with wheels, this weirdly spinning motion that always happens when the air is moving, weirdly spinning motion that always happens when the air is moving. This somehow represents the nature of turbulence. Now, as I said, turbulence means that momentum is exchanged. So the force that you've put onto your fluid, onto your air, is then transferred somewhere and it's pushing some other particles of air around your room. This is how thermal plumes are formed. This is how ceiling jets are formed. This is how jet fans exert force on the air inside my tunnel. This is exactly the reason why the air is moving in the fires, this momentum transfer phenomena. This is also something that causes very efficient mixing of the air with smoke or smoke with the surrounding air. I once called the smoke the spoiled air, and that's pretty much it. You have a plume of smoke that is in its swirly motion, and with every rotation of those wheels, it takes some fresh air inside, growing the wheel. This is how entrainment works, how the smoke plumes grow in size, how we get more smoke in our buildings, and the main reason why people have to spend so much money on smoke control if they want it efficient. Anyway, we can kind of predict that. We can kind of predict what this motion will be, what will outcome of this turbulent motion be, how much of air will mix with the surroundings, how much of the momentum will be lost in this motion. And we call this turbulence modeling. Turbulence modeling is definitely something you have heard about. You have perhaps heard about the RANS model versus LES models. There's a very passionate discussion among people about superiority of one above the other, and yeah, quite a lot of perhaps even controversy, but it is quite simple, to be honest. In the most simple terms, we have two main families of how we simulate turbulence. One is called Reynolds Average Navier-Stokes models, and the other group is called Large Eddy Simulation LES models. In the RANS models, what you take is that you take a chunk of a space, a single mesh element, a single smallest cube of space that you're simulating in, And you realize that, okay, the air is moving in a turbulent fashion through this element, which means that there are some of those vortices, those eddies flowing through this element. This is an assumption. There's a turbulent motion, so it must be like that. Then you assume, okay, when the air is moving in this fashion through my element, I'm going to have ups and downs of velocity in my element, because I will hit the top of the eddy, I will hit the central point of the eddy where the velocity is zero. So I'll have ups and downs in my velocity, but I'll have some average velocity out there, and I'll probably have some fluctuation. So in those models, we kind of separate the properties of flow into the average part and the fluctuating part, and we mostly focus on calculating the latter. We also define the turbulence not by number of headdies or some very physical quantities. We did it by statistics. We did it by concepts of turbulence intensity or dissipation rates. We assume that momentum is transferred through something that's called the turbulence viscosity, and we're capable of calculating how much of this momentum is actually transferred in each of our elements. That's probably the simplest way I can explain it. So instead of modeling those eddies in detail, we choose to apply some statistical modeling, some averaging, some simplification to tell, okay, in this element, it's so turbulent, and the other element is a little less turbulent. In the following element, it's again more turbulent. And knowing that those turbulence parameters, you can fairly well calculate the flow properties, the velocities and the momentum transfer in your elements. Success, success. Where's the catch? It's averaged in space. It means that you get an average picture out of that. You're not getting this beautiful picture of turbulence. You're not getting those beautiful swirls. You are getting an average outcome. And in some cases, it's challenging. In some cases, it's not a problem for me. It's usually not a problem that my fires look like a flat jets. It's how I expect them to be because I understand that by introducing the concept of averaging, this is how I make my image look like. When you go to the other school of turbulence modeling, the large eddy simulation, it's a different concept. In large eddy simulation, you also do some kind of assumption. You assume that, okay, the momentum is transferred through those worlds moving through my space and time. If every world on its edge, there's a collection of smaller worlds, and on those smaller worlds, there's a collection of even smaller worlds, and so on, so on. I can assume that, let's say, 70% of energy is carried by the biggest one. And an important disclaimer here, I made the number up. I don't know what the percentage is. It depends on the flow, Reynolds number, the size of the world. But anyway, for this consideration, let's consider it to be 70%. Out of that 30 that's left, 70 is carried by the second biggest one. Then 30% left out of this 30%, again, some percentage of momentum is carried by smaller and smaller. And eventually, you reach the size of an eddy, which carry so little of the momentum, that it's perhaps not really worthy of investigating. And that's where you cut them off. That's where you apply something that's usually called the Smagorinsky filter, and you basically stop calculating those eddies anymore, because you know that they're kind of meaningless. There's no point in calculating them, because they're not important for the flows at large. You can actually, instead of omitting them completely, you can just apply a simple one-equation model or two-equation model to solve the dissipation rate of those eddies and add some of the momentum transfer that's going through them into the overall picture through something that we call the submodel. And voila, you get a fantastic solution of your worlds. You are directly solving using Navier-Stokes equations the big worlds that are flowing through your domain, the ones that are important, the ones that drive the flow of smoke and heat and air in your building, in your forest, whatever you are simulating, and you simply omit the ones that you think they are not worth investigating. And yes, it's your decision. It's the decision of the user because the cutoff point is usually defined by the size of the numerical mesh, which we will reach in just a second. The main benefit of large-edit simulation of LES modeling is that you get a very beautiful picture of fires. Like you get this very nice, swirling, realistically looking, puffing motion. You can also catch up the peaks better than in RANS simulations, especially when we are talking about phenomena like wind. If I want to capture gusts in my wind, RANS modeling is not really the best. I would need LES modeling. it's not really the best. I would need LES modeling. In fire phenomena, if you want to capture, for example, the poof motion of the smoke, you can only do that with LES modeling. And it really adds to this realism. Like, fires in FDS really look like fires, because of these fundamental principles of how LES is treating turbulence. The downside though, there is downside. First, you need significantly higher computational power than for RANS simulation, because you are calculating much smaller eddies. And to add to that, if you want to capture the evolution of those eddies, of those swirls in time, you usually have to apply very short time steps. So you can get away in the runs with much longer 0.1 second, 0.2 second time steps, whereas in LES simulation, if you start your FDS, you see that. FDS tells you what's the length of the time step at the particular time, and they usually go to like fourth or fifth digit behind the coma. So, yeah, the time slips are really tiny. The mesh is usually quite tiny because by the mesh you define how big vortices you're capturing. So you're ending with a little more costly simulation, actually quite a lot more costly simulation. So, yeah, that's the reason why there's still a market for RANS modeling. And for one, I'm using that because that's a good enough solution for me at a reasonable computational price. If you're using FDS, you're only capable of using LES model, which is great, which is great. LES implemented in FDS, a product of NIST engineering, of genius people that are working at NIST. This is a great solver and definitely works out with fires. This is a great solver and definitely works out with fires. Oh boy, now I'm looking at the script and at the clock and I'm perhaps 20% into the lecture and already half the time. So let's speed this up. We've discussed some models before. So the fundamental laws, continuity equation, conservation of energy, conservation of momentum. We've discussed turbulence modeling a critical part because fires, you will always have turbulent motion and the momentum exchange will always happen in a turbulent flow. There are other supercritical models in CFD that are fundamental for fires. First is the treatment of gases as ideal gases. First is the treatment of gases as ideal gases. What this means is that there's a relation that describes, that correlates the pressure to density and temperature, which kind of means that if you heat gases, you change their density. And because of this change of density in the equation of momentum, there's a false term that represents gravity. Gravity is always there. Buoyant forces make your gases fly up. This is fundamental for fires and enables us to do fire simulations. So we have to consider how the gases are changing when you heat them up. Actually, it's quite funny because I told you in answers I have to click all the models I want. And numerous times we have ended up not clicking the model representative for BNC, and boy, those results look really funny when you do not turn it on. Another one, radiation. So we have three modes of heat transfer, radiation, convection, conduction. Each of them is represented by some sorts of models in CFD simulations. represented by some sorts of models in CFD simulations. The radiation are models that are calculated within the space, the volume of your model that correlate the energy quanta that are flying in and out from all the surfaces in your model to each other. Basically, you're calculating how much heat is transferred between all of those. And because it's a very computationally expensive model, we have some simplifications into that. We limit the amount of angles at which we calculate it in the so-called discrete ordinance model. We have Monte Carlo models. We have surface-to-surface models, a lot of ways that allow us to calculate how much energy is transported with radiation within our CFD modeling. And here I would put forward something quite controversial. I would claim personally, and this is my opinion, this is not a scientific fact, please take that into account. I would say that in fire CFD, we do not need radiation that much. We need it because it's a heat sink for the smoke layers. I think that's the fundamental reason why in my fire engineering I'm using radiation. Of course, if you're doing structural engineering analysis at very high temperatures and you're interested in the temperature conditions on your walls or general the thermal image of the fire in your building that's different. But if you're doing simulations for smoke control, I would say radiation is there to make your smoke cooler, to make your smoke radiate heat out, cool itself down, and that highly influences the properties of smoke, because it changes its buoyancy, it changes the forces it has, it affects the flow of smoke itself. So, yeah, I would say radiation is mainly a heat sink model in smoke CFD. If you have a different opinion, let me know. I'm happy to discuss this. Perhaps I am in the wrong in here, but yeah, I truly believe it is like this. The convection, the heat transfer happens between the fluid and your surfaces and your walls. And here we can go into a very difficult subject of a boundary layer, what's happening at the edge of your fluid where your air ends and your wall begins. This is a very interesting and challenging space. We don't really handle that well in fire safety oriented CFD analysis. Perhaps I'll touch it a little bit more when I reach the sensitivity. But yeah, we do solve convection. The challenging part of convection is defining the convective heat transfer coefficient, which we usually would relate to the values found in Eurocodes because it is a true pain to find the true value of that. If you know what the true value is, then please tell me because I struggle whenever I try to define the convective heat transfer coefficient very precisely. It's a really, really challenging task. I know people doing PhDs on just this matter. It's really fascinating. And the third mode conduction, basically an implementation of the Fourier slow into our analysis if you're investigating solids, or if you are using some simplified heat transfer models, like in FDS, you have these one-dimensional heat transfer models that represent what's happening inside of your walls when they are heated, even though you're not modeling them explicitly, you use the Fourier's law for that. And there are some really neat solutions for this available. Another set of models, chemistry, the chemistry, the combustion. This is a massive, massive branch, and we're not really using most of those, but we're usually resulting to some very simplest mixture fraction models, flamelits, or some very simple premixed or non-premixed combustion models. That's perhaps an episode on its own, or maybe even five episodes on their own. I won't go in there because this is something that an apprentice CFD user should not go. That in the end, you really have to trust the developers on the choice of their models. And if you have to pick those models, perhaps you need to train a little bit more on your own. There's more. Suit formation, all the post-processing models that we are using, you know, visibility in smoke, response time indexes. We have fascinating models for introduction of water sprays. This is actually something I can stop by for a second. There's a book by Tarek Beji and Badmese that I'll link in the show notes that describes the computational fluid dynamics for fires and has perhaps the best explanation on the water-fluid interaction, water-air interaction, and it's quite a complicated matter. The challenge when you introduce water spray is that water spray is basically a collection of droplets, and it's very difficult to capture droplets in the way how we are modeling the CFD with our control volumes. So, to be technically correct, when you are doing simulations of your fluid dynamics, you are applying something called the Eulerian approach to modeling. Basically, it means that you split your domain into elements and you track the fluid flow through those elements. Think about a large river and there's a bridge. And you are standing on the bridge. And you are watching the river flowing underneath you and the boats flowing underneath you. And you are always in the same position. And based on that position, you can tell what velocity the boats have, what velocity the river has, what is the temperature of water underneath the bridge, etc. That's Eulerian modeling. That's how we handle, that's how we usually carry on the computational fluid dynamics for fires. Now, the other way of modeling is Lagrangian modeling. In this modeling, you are tracing the particles independently. So, if you imagine the river and the bridge again, this time you're on a boat. So you are always on the boat and you can tell what's the temperature of the water underneath the boat. You can tell how quickly you have moved past the bridge. But your point of reference is very, very difficult because you're always on the boat and you're moving against the environment around you. That's the Lagrangian approach to modeling. And those are two very different approaches. We don't really have Lagrangian fire models yet. I know there are developments for that and it's kind of interesting because they are very computationally efficient and cheap. Basically, they're fast, but they also have their limitations. That's the reason why they are not here yet in the common use. Anyway, if you want to simulate water spray in your CFD simulation, Lagrangian approach is the one that you are going to use to actually represent that flow of water through your domain, which is filled with air. And now you have a very challenging problem of the momentum transfer between the droplets to the environment that surrounds them, heat transfer between the droplets and the environment that surrounds them, heat transfer between the droplets and the environment that surrounds them, evaporation, chemical processes happening in those droplets which affect the flow field through which they are flying in. This is really complicated. And by the way, we're not talking about 100 droplets. We're talking about billions of droplets. And if you want to simulate billions of droplets, you cannot afford that. Just like you cannot afford simulating the smallest turbulence up to the Kolomogorov scale. You have to cut it off at some point. You have to bulk them at some point. You have to apply some model to represent them in the smaller amount of Lagrangian particles that you are simulating. And this is what water spray models are trying to achieve. They're trying to put these moving particles into the Eulerian field and solve interaction between the two of those. And trust me, this is very, very difficult. This is not a simple task that you can just go in, start your FDS, do your fire, pop in a sprinkler, default settings. Okay, you will receive a result. You will even receive a result based on physics, on experience, on some reasonable assumptions. But does this result represent the real physics of water-spray-fire interaction? I would be very wary of this type of modeling. For me, it's too challenging. I only do it when I have to, really. And I put a lot of caution warnings when I do that. Now, let's say we covered the basic models in the CFD. Let's talk a bit about the user. You know, garbage in, garbage out. There's a person that puts the garbage into the CFD. So what kind of garbage can you put inside? Obviously, you can fiddle with the design fires. And in some episodes ago I've discussed with David Morissette the design fires that was a fun episode. This is the most important variable that you put into CFD and in many cases the choice of turbulence model or mesh sensitivity. If instead of one megawatt fire you put 100 kilowatts, those choices are secondary, really. It's the scrutiny in what you're modeling, the most important thing. But if we limit this discussion only to the properties of the CFD, only to the physics that you are applying in your simulation, then user has influence on many parameters. One most commonly discussed is the mesh sensitivity or the impact of user on the inputs related to the mesh. Was the mesh proper or not? So, what's the role of the mesh? I'll give you an example when the mesh does not matter at all. Imagine you are simulating a piece of sky, a piece of air that's floating 100 meters above ground. And there's nothing around that chunk of air. It has, let's say, 10 by 10 by 10 meters dimensions, a huge chunk of air. And whether you simulate it as 10 by 10 by 10 chunk, or you subdivide it into one meter meshes or into 10 centimeter meshes, I mean, there's nothing affecting this flow. It's just one steady unified flow that is happening there. And if you average it out, if you go into more finite definition of that flow, doesn't matter. You'll get the same output. Now, if you consider the same chunk of air directly at the ground, now we're talking about differences, because there is something called the boundary layer, the change in velocity profile, as the flow approaches the surface. By definition, at the surface, the flow is zero, so it has to slow down. As you move closer to the ground, there's roughness, which also changes the flow behavior in that boundary layer. roughness which also changes the flow behavior in that boundary layer. So if you pick a 10 meter mesh, you may capture flows that are averaged and this little boundary layer that's perhaps one meter tall. If you choose 10 centimeter mesh, the entirety of your mesh element is in the smallest part of the boundary layer. Perhaps there's almost no flow out there. And if you pick a one meter mesh, you're in some intermediate zone. You're capturing, let's say, half of the boundary layer, perhaps there's almost no flow out there. And if you peek a one meter mesh, you're in some intermediate zone. You're capturing, let's say, half of the boundary layer. If you compare those three results, these are three completely different outcomes. Because it's three completely different physics that you are capturing. This is the true mesh sensitivity. Again, if you simulate a ventilator, mechanical vent into a corridor or something, if you put one mesh element over the vent, you're basically putting the entirety of air through this one cell. You're not representing that the flow at the edges will be slower than in the middle of the vent. You perhaps really skew the vector of the flow because you don't account for any obstacles that are on the grill itself. Perhaps it has some lamella or something that changes the direction of the air. No, you're not capturing any of that because you have one element. If you put 10 elements, you perhaps start to capturing all of them. But if you put 10,000 elements, you're not going to capture that much more in your model. You're just going to have a more granular, more fine solution, but perhaps it will be the same result as if you have 10 elements. There is no universal saying on what the mesh size needs to be, because it needs to be appropriate to the thing that you're solving. The same is true for fires. There is no real true mesh size that fits all the fires. You may have a candle flame, you may have a fire of an oil spill in a refinery that has thousands of megawatts. These are two completely different fires that will require completely different formation of the numerical domain to solve them. And different measures will be appropriate. There are some ways to assume that. The most common would be something we call the D-star. It's a condition that was introduced, if I'm not wrong, in some studies for American nuclear industry, where they were validating models, FDS included, where they were validating models, FDS included, and they found some range of sizes of elements in which you saw that the outcomes are reasonable, and that was put forward as some, let's say, recommendation. I'm not even sure if it has recommendation or just a statement, but it was adopted by the FHIR community as a recommendation of the mesh size. Yes, perhaps that's to some extent reasonable for FHIR itself, but keep in mind FHIRs are not the only things that we model. We sometimes model jet fans, we sometimes model wind, we sometimes model other flows, so your mesh has to take into account also those. It's not enough if you validate your mesh against the fire. And also, because the mesh has to be correct for the application that you're using, you sometimes will not find a big value in reducing the mesh size. You will often not find it because you are not capturing any new phenomena. often not find it because you are not capturing any new phenomena. The big difference will happen when with the new mesh resolution you suddenly start capturing or resolving phenomena that you previously were missing and that's where you will see big jumps, big shifts in your solution. This is not easy and mesh sensitivity studies are very difficult in fire because fires do not converge that easily or the outcomes of fire simulation, better said, are not converging that easily with changing mesh. And sometimes the mesh resolution studies that I see around make no sense because you're not answering the correct question. The correct question is, is the mesh size appropriate for the physical phenomena that I am trying to capture? And unfortunately, the mesh sensitivity has also the other end. It's not just how well you capture the phenomena, it's also how much does it cost you. Because if you decrease your mesh resolution by half in FDS solver, you will increase your solution time by a factor of 16. So each decrease in the mesh has its consequences. It costs you a lot. And yes, you can speed up your simulations by increasing the mesh size. But if you suddenly stop resolving the phenomena that you are supposed to resolve, that simulation just became garbage. You have achieved the garbage in, garbage out philosophy. And boy, there's so much more that we need to talk about CFD. I'm going to try to find some good speakers on the subject that perhaps can go into more detail to some of the aspects that I have discussed today. But I will give myself a pause and I will stop in here. I think I conveyed the most important messages that I wanted to convey to you. I find CFD beautiful. CFD is fundamental for practicing fire engineers. We are using it every day and we are using more and more of it. If I was to predict future, I would say that seeing how the developments are in terms of the solvers and the hardware software pretty much, I think there will come a time where we will have specialized fire CFD engineers, not necessarily the major companies, but perhaps smaller endeavors that will specialize in just doing the CFD. And that could be a good way, but I can be wrong. Perhaps there will be, like today, every company having their own HPC computer, having their own specialists running CFD for them. We will see what future brings. But no matter if you are doing CFD or not, at some point of your fire safety engineering career, you will eventually see some simulations being presented to you. You will be asked for evaluation of them. You will base your judgment on them. So, yeah, it's better to know how those results were obtained. Where did they come from? So that would be enough rambling on the CFD with me. I hope I did not make you fall asleep. I hope this was to some extent interesting to you. For a long time I wanted to do a CFD episode. These are not easy episodes, so if I mess something up, please forgive me. If you are someone specializing in CFD and I've done some outrageous simplifications in this episode. You have to forgive me. But in order to bring this to more people, in order to make this attractive and interesting to avoid their audience, we have to make simplifications. And I truly see there is no resources, almost no resources that would explain this in a plain language. So I hope I am contributing to filling up this gap. I hope you've enjoyed this fundamentals of fire science on the CFD method. And I hope to see you back in the fire science show next Wednesday. And if you are a fan of the show, there is something very interesting and rather big coming up in the month of April. I am partnering with a company, Halliwell, and we are going to do something very interesting, podcast-ish interesting, a little spin-off of the series. You will learn more details in a very near future, but have your eyes on this space. This will most likely be quite interesting. So, yeah, so much more good fire-oriented audio content coming your way in the Fire Science Show and in that other thing that you will learn about very soon. So, see you there. Cheers. Bye. Thank you.