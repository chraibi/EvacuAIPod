 Hello everybody and welcome to what seems to be a holiday special episode of the Fire Science Show. And the episode is definitely special because it seems to be one of the most requested interviews to be done on the podcast. So I'm super happy I finally arranged that. Today I have the pleasure to interview Dr. Kevin McGrattan from NIC, who is better known as the creator of FDS, Fire Dynamics Simulator, a tool that I guess every fire engineer in their career has used at least once. That's my belief, maybe not true, but I think everyone of us has used. And I guess I could just stop the introduction at this point and just jump into the interview. But I still have some stuff to tell you before we do that. So I'm super excited, not only because of the fantastic guests I'm having today, but also because the podcast has just breached another milestone that is 50,000 individual podcast listens. Thank you so much for being here. Thank you so much for listening to the show. I'm super happy to be a part of your professional life. And I'm super grateful that you choose to spend your time with the Fire Science Show. And it has been a challenging journey to reach this point. But today the podcast is better than ever before. I have all the things set up in place, all the automation set up in place, all the routine going. It's a pure pleasure to create a podcast nowadays. I get to interview magnificent people. I get to share it with you. I get to interact with my audience. I'm talking to you through my newsletter. If you haven't signed up for that, you can through the website. And I try to use more and more ways to listen to you more and produce the show that you want. So I hope there are some good times ahead for the podcast. I'm very sure about that. And yeah, early next year, some more interesting and big updates coming your way. But for now, let's focus on what's here now. And what's here now is a great episode of the show where you will learn a lot of stuff, a great episode of the show where you will learn a lot of stuff where FDS came from, what was the rationale behind building this set of tools, how did the landscape look when Kevin did build it up, how did the team look up in the early days, how did the solver look up in the early days. Oh man, it's so fantastic to discover the fairly recent but very important part of the history of the fire science. And I would also like to encourage you, if you have some great memories from the early days of FDS development, I don't know if you used version 1, 2, 3, 4, 5, or started with version 6, doesn't matter. Share it with others. Let's see how the path to using the model as it is today looked like, and maybe we'll have some fun sharing and collecting experiences of the Firesize Show audience. And I won't take more of your time because you're waiting to hear Kevin, and you're right, you should. Thank you for being here with me, and now enjoy your episodes. Thank you for being here with me and now enjoy your episodes. Welcome to the Firesize Show. My name is Wojciech Wigrzy≈Ñski and I will be your host. Hello everybody. I'm here today with an episode everyone was asking for. I have invited Dr. Kevin McGrath from NIST. Hey, Kevin. Hey, how are you? I'm super good. Thank you very much. And we are going to talk about dynamic simulator development. Man, that's a topic. That's a tool. Many times I've said FDS is among maybe three best or most impactful things that happen to fire science. I would put it on par with the SEPHIA handbook and oxygen calorimetry. I'm not sure if that's where you would place it as well, but there's not many things that would have such an impact over the whole discipline. So, first of all, Kevin, thank you so much for building and managing that, you and this team, this amazing effort. Yep. Well, it's interesting. And it is fun. You can come to work every day and enjoy what you're doing. That's a plus. Yeah, for sure. That makes sense when you say that, because I don't know how you manage all of this, looking through the issue tracker and stuff like that. I don't know how much I would handle. Well, you know, one of the fun parts about the job is that every day there's something new. And sometimes it's some issue having to do with, you know, computer science, some fire that occurred somewhere that's of interest, some little bit of science that I know very little about and I learn something about. I mean, every day there's something new. Just come in in the morning and you look at that issue tracker in the discussion group and I didn't know that. Okay, that's what I'm going to be doing today. That's so cool. So, Kevin, as far as I know, you're a mathematician. I am. How does a mathematician end up working in a fire laboratory? So, I studied mathematics in graduate school at New York University, called the Courant Institute, and after I graduated, I found a postdoc position, a postdoctoral fellowship down here at NIST. And my advisor was named Ron Rehm, and he was in the applied math lab. So I came down and I found out that Ron Rehm was working with a fellow named Howard Baum, and Howard Baum was doing fire model calculations. And so I started doing fire model calculations after all. I was a postdoc, and I found it pretty interesting. When I was in graduate school, I worked on high-speed flow, you know, flow at supersonic speeds. And I came out here and completely turned the tables and started looking at low-speed flow. I mean, fire in the realm of speeds is relatively low Mach number. And in fact, that's Rod and Howard really pioneered with this, was this idea of a low Mach number approximation of the Navigative Stokes equations. So that was a refreshing change for me because up to that point in my, my education, I've been looking at shock waves and high speed flow and now something completely different. So, you know, that's how I, that's how I got into it. My other connection to fire, though, is that my uncle's name is Bernie McCaffrey. So those of you who are familiar with fire science would recognize the name McCaffrey. He did a lot of work, experimental work with bloom correlations. He developed a bidirectional probe or one type of-directional probe. And so just by coincidence, you know, he is my mother's brother. I always wondered what was fire science. I would go to my grandmother's house when I was growing up, and she would have a picture of him from one of these meetings. And he won the, you know, the Fire Scientist of the Year Award or something. What is fire science? Well, I got a good education when I came down here to NIST after graduating from graduate school. That's how I got started. There was no other reason other than that just happened to be what my advisor was doing. So I started doing it too. I guess we should be grateful then. And Courant Institute, like the Courant number, huh? Yes, exactly. That's nice. That's interesting. Richard Kuranek was a German mathematician who led the Nazis in the 1930s, and he started up the program at New York University. And, you know, he and his other cohorts were famous for that Karat number. So that's something that was tattooed onto my brain when I was in. That's just the importance of the Karat number. Fantastic. And now, when I was going through some files, I saw in one of them that the FDS was in development since 1978, but I guess this would trace back all the way to these Lomach number, Howard approximation times. Yes, exactly. When it became a reality that you are going to build a three-dimensional model that's supposed to simulate fire environment, because I should actually ask, how did the playing field look at that point? That's the time of CFAS and stuff like that, right? Yeah, so what Ron and Howard were doing was somewhat ahead of its time, and the whole concept of the low Mach number and their approximation that they made to the equations, that was absolutely necessary because if you want to run these CFD calculations for long periods of time, I mean, like when we do fire simulations, sometimes we're simulating hours worth of time. You've got to make some approximations and not having to track these pressure waves as they bounce around your domain is a huge advantage. That's what allows us to run FDS relatively fast. A lot of people do complain and say, run your FDS calculation. But if you actually look at other packages or other CFD techniques, it's actually relatively fast what we're doing. And a lot of it is due to the low lock number approximation. Ron and Howard actually had a background in meteorology. Ron went to MIT, the Massachusetts Institute of Technology, and Howard went to Harvard. And they were working with some of the pioneers of meteorology and meteorological CFD. So a lot of the techniques that went into their model was borrowed from the weather people, not the people who were designing missiles and rockets. A lot of CFD at that time was all about shooting intercontinental ballistic missiles and landing men on the moon and high-speed flow and all of that. And you need certain approximations in the equation to handle those kinds of flows. But Ron and Howard looked to the meteorologists and they said, you know, what do we have here? We have buoyant thermal plume. So we're not talking about, you know, rockets reentering the Earth's atmosphere at, you know, Mach 10. We're talking about weakly buoyant thermal plumes. And that's how the equation is developed. And the most fundamental tool you would use for modeling at that time would be the zone model, I guess. So can you tell me about the moment where you thought of the thing that, okay, a zone model is great, but it would be greater to go three-dimensional and use these fancy tools? Right. So when I first started working with Ron and Howard in the early 90s, we developed a couple of different pieces of software to handle different problems. So I worked with one group, and they were looking at big oil plume fire, big oil fires that created big plumes in the outdoors. We're talking about tens of kilometers into the atmosphere. And then I was working with another group, and we were doing these literal tiny fire spread calculations of flames in outer space. So we had some work from NASA to look at the spread of fire on the space shuttle or the space station. So we were doing these tiny fundamental little flame spread calculations. Then I was just doing some simple flame calculations within simple compartments. So I had a whole series of different codes that I was working with and I was kind of slamming these different algorithms together, each one for each different application. And that's not unusual. In CFD, oftentimes you find that someone takes a bunch of kind of bits and pieces, core solvers, if you will, and puts them together for each application. Well, I found after a couple of years of this that I was getting stretched way too thin. So I had too many codes to take care of, and I needed to consolidate. to take care of, and I needed to consolidate. So the idea was that I should be able to combine all these different bits and pieces into one code that can handle this range of different applications. And that's a bit of a stretch going from these tiny little flames in outer space to gigantic oil fires. But if you look at just the core solver, the Navier-Stokes equation, it's common to all of these things. In fact, all CFD codes at the end of the day have some kind of basic transport equations. And so I combined that all into one code. And then we started applying it to some applications back on our plate at the time. One of the first applications was we got involved with the NFDA Research Foundation, and they were looking at this issue that involved sprinklers, vents, and draft curtains in warehouses. Okay. That was a bit of a controversy at that time. In the 90s, at least here in the United States, we started to see all of these, what we call big box stores. I don't know what you call it in Europe, but think like the Ikea warehouse, right? Okay. You know what that is. So that was somewhat new in the 90s. And the new concept there was that we were combining, what would you want to call it? Like industrial fire protection with the type of life safety fire protection you would find in a small store okay so now you basically have people in a large industrial facility and so there was a lot of controversy as to you know how do we protect both property and life safety at the same okay so that's's where this problem of sprinklers, vents, and draft curtains came up. In these stores, you would have sprinklers, but then they also wanted to keep the vents and the draft curtains, which was a sort of earlier technology. To make a long story short, some people complain that these three did not work well together. They still do, Kevin. That discussion has not ended. Right. I find it interesting that you say it was multiple codes applied together. I've heard different versions of this story said by different people. Like some people were saying, oh, there was this industrial fire model that originated. Some were saying, no, no, there was like Aloft for external plumes. They used Aloft first. And I see all of them have a bit of truth, and the truth is that you were done with writing a separate model for every application. That's right. There was something called AVOFT which we use for the big oil plume fires, and then there was something called the Industrial Fire, which we use for these big oil plume fires. And then there was something called the Industrial Fire Simulator, or IABAT. And that's just typical of the way things were, where you would put together a special code for each special application. But it's a nightmare in terms of maintenance. Of course. It's impossible. So I just combined everything into FDS and it's been that way ever since and it makes my life a lot easier to just practically check on one phone and not three or four. It sounds like the best investment in your life, I guess. Right. But there's also something, there's a bit of like sort of academic politics involved and that is oftentimes people rename or rebrand yeah research that they're doing because then it sounds like something new yeah and even today sometimes you know when i talk to my managers they say you know this fds thing it's been great but what's next what are we doing i don't know we're just trying to make it better or something we're not necessarily going to rebrand it yeah it's like iPhone. You can make FDS 6S now or something. Now I need to ask you, like, when you were merging this model, you must have done some choices. And now, 20-something years later, we're all doomed with your choices. So I would love to understand, especially the first and most impactful one, I guess, LES model. So for the listeners, FDS works with turbulence model, the way how you model the turbulent part of the flow of the air, called Large Eddy Simulation, a Smagrinsky version of it. And I would say, even today, if I was making a proposal to write a new code and said, and I would like to make it LES code, maybe today it would not be very odd. But 20-some years ago, I guess that was a bold decision. Can you tell me the background? Well, remember I said that we had our start in meteorology. Yeah, okay. And Magarowski was a meteorologist. Yes, yeah. I think I had a Google search on it, but I believe Magarowski was developing algorithms for meteorological models, so it was natural for us. And the other thing, too, was that we did have some experience with RAND codes, Reynolds Average Navigators codes, but I found RANS codes to be so uninteresting. Okay. So for example, when we do a fire simulation and you see the buoyant plume and you see the smoke behaving the way smoke really behaves, and if you've had experience working in a lab as I have had, it gives me great satisfaction to see on the computer screen exactly what I see in the laboratory, or at least something fairly close to it. But when you run a RANS model, I mean, you may get a reasonable result or answer, but I just find it to be so unsatisfying to see that, you know, time average portrayal of the smoke movement. And so for me, it was just more of academic interest. We weren't at that time, when we chose LAX, we were thinking that this was just going to be an academic exercise. We didn't realize that people were actually going to sign shopping malls. We thought we were just going to run calculations, go to meetings, live the academic life. And it wasn't until around the year 2000 or approaching the year 2000, I started to give the code out just to some friends in the area who wanted to play around with it. And I was startled when they came back know, fairly sophisticated renditions of buildings. Some of these buildings were in the Washington, D.C. area. And I thought, wow, I mean, this is fantastic. And I found that the engineers who were doing these calculations, they really enjoyed it. I mean, almost like a little kid playing with megablocks. I mean, we all enjoy that. We still do. Building up, you know, complicated geometries and then looking at the smoke move through it. I just found it was interesting. And I think that the engineers who were doing the work also found it interesting. So don't discount that, you know, work should be fun. And I know it's somewhat difficult to say that, you know, fire is not always fun. Sometimes fire is not very fun. But, you know, setting up these calculations, it's challenging, it's fun, it's rewarding. And I think that, you know, I was having a good time and I think that the engineers who were using the model were having a good time. I thought, you know, if they were interested in it and they put that extra bit of effort into doing these calculations, why not? I mean, that would advance the field. I've read in one of your papers or maybe in an interview with you that shows less because it was interesting. So, again, this one is confirmed. It's like Mythbusters in here. Right, right. Now, I mean, I could spend an hour arguing as to why LES is technically superior, and we can go into turbulence models and closure methods and all of that. But, you know, for me, at the end of the day, I just was much more satisfied running these, you know, realistic looking fire simulations. And then when we, you know, when we discovered that we could actually do these calculations on desktop personal computers, I mean, that was a win-win. He said, all right, you know, if we can do LAS on a manageable platform, why not do LAS? I find it also fascinating that you've built this as a tool for science, not imagining the impact it would have over the engineering discipline, that you were discovering that as the tool was given, that must have been very rewarding to see how creatively people use it. Maybe sometimes even too creatively, but we'll reach that point for sure. Right. But again, that's part of the fun because you develop a technology and then you see that technology grow in ways you never imagined. I mean, that could be said of so many things that have happened in the past 30 years with the boom in computing or information technology. I mean, a lot of the things that we take for granted were developed just out of the blue, and the developers themselves never had a clue that it would take off the way it did. So if we think FDS version 1, what was it like compared to the modern FDS? Like, what are the things that we would take for granted that they were not even in inception at that point? How did it look? Had he transferred to the surfaces? It really didn't. So one of the things that FDS 1 lacked was radiation. Okay. We had a very, very crude rendition of radiation where we literally assumed that the firework were just a bunch of burning, like little particles, little burning ping-pong balls. And each ping-pong ball would radiate a certain amount of energy in all directions. And we just used like a simple Monte Carlo type algorithm that just randomly shot the energy out in different directions. And about that time when we were developing FDS-1, Simo Hostica from ThinVine came to visit us for a year. And I remember when I first met him and he said, you got to put in a new radiation solver. This one you have is terrible. I was like, okay, Simour, do you think it's so terrible? You can have it. And I'll tell you, within a month, he had essentially what is still in the code today. He developed something within a month that is still a workhorse. And quite practically, we've never really improved on it. It's that good. That's where FDS-1 went to FDS-2 and so forth. Okay. And the next combustion model, like did it have combustion at the beginning or also use some clever approximations? No, it didn't really have combustion. All it had were these ping pong balls. And each ping pong ball you could think of as representing a certain amount of fuel and the energy would be deposited onto the grid in a certain amount of time. So in some sense, the most basic type of Lagrangian model where we just we had a burnout time for these particles that was just fixed. So it wasn't tied to any turbulence or anything else. It just wants the ping pong ball, and in half a second, say, its energy is deposited onto the grid. Okay. And we adjusted that burning time based on the flame height. So if the fire was too short, then we just extend it. Okay. A little bit taller. So there really was no combustion at all. It was just really a way to deposit a fixed amount of energy onto the grid. It's almost like what you do now. Sometimes you have these volumetric heat sources where the fire is really just like a cone. You deposit the energy in a conical shape on your grid. It was about that level of complexity. So at that point, it was mostly the flow solver. So you had the flow, you had the turbulent flow with LES. You have created these ping pong balls to basically release the energy to capture the buoyant flows. And smoke, you just used the mixture fraction model? That came later. In FPS1, there was no mixture fraction. We just used these ping-pong balls to visualize the smoke. And so also that's when SmokeView was born. Okay. SmokeView was originally just a simple visualization tool that allowed us to visualize the particles. Okay. So the particles were colored orange when they were burning, and they were colored black when they weren't. And so you have the fire, and then you have the smoke. And that was the original smoke view. And then Glenn Forney, who developed it, you know, as time went on, he started studying all sorts of other techniques to visualize the smoke. I mean, a lot of his inspiration comes from the movies. So he reads a lot of books about how computer graphics are used in the film industry. And some of what you see in Smokey now are simple renditions of what the Pixar people are doing. You have, I must say, fairly advanced camera operations within SmokeView that is misaligned with the needs, I guess. That explains why. If someone would love to film in the stream media, it makes actually sense. And also no heat transfer. Okay, you didn't have heat transfer to film in this. You made it. It makes actually sense. And also, no heat transfer. Okay, you didn't have heat transfer to solids. Yeah. Okay, so you had the solver. How did you choose, like, okay, now let's add the heat transfer. Now let's add the combustion. Was it because of certain cases, or was there, like, a grand plan for the next 10 years? No. I'd love to think that there was a grand plan, but it usually came case by case. And so the heat transfer came about because, you know, our original problem were these rack storage fires, right? So you've got boxes piled up in a warehouse and we would start the fire at the base of the boxes. And obviously we needed to heat up the surfaces of those boxes until we got to some, you know, quote unquote, ignition temperature. And then the boxes would start burning. So in order to do this sort of simple fire spread, we had to have, you know, a relatively simple, you know, heat transfer algorithm into the box. And combustion, like when did you figure out, okay, I want to see the flames? So combustion came about, like in FDS2, I started working with Jason Floyd. So Jason Floyd was my postdoc. He had graduated from the University of Maryland with a PhD in nuclear engineering. But he's a clever guy, and he figured out how fire works. And he was doing work as a postdoc to get underventilated fires. And so we knew that in order to do underventilated fires, we couldn't just continue, you know, with this burning ping pong ball idea. That wasn't going to do it. So Jason and I developed the mixture fraction approach and sort of a first way to look at combustion more realistically and also to look at combustion in an underventilated environment. Now we have to then evolve beyond the mixture fraction approach to what we do today, which is where we have these so-called loved species, you know, fuel, possum, beer, most of the products. But FDS2 sort of introduced the concept of the mixture fraction. And then, you know, Jason's been working with us ever since. And over time, he has evolved the combustion model to what it is today. And Jason's a star. He was also at the podcast. Yeah. Yeah. I listen to his talk. All the best to Jason. So, okay, now you have mixture fraction approach and capability to do underventilated fires. I think now, at this point, FDS gains capabilities that highly go above what we could do as a fire modelers, like balances of heat, small compartment fires, stuff like that you could do with CFAS. But once you solve oxygen and you know how much oxygen is in your room, you know how much is next to your doors and how much is in the back of the room, you create very non-uniform environment in your compartment. And this is when you start to see inside the fire like no one ever done. So when did you start doing back drafts or smoke explosions? I guess you probably immediately went for that when you gained these capabilities. Yeah, well I think we were. Again, Jason was doing his post-doc research down at Virginia Tech, and he was working with another fellow named Chris Wazorek, who's now at Factory Mutual, and they were, you know, they had a reduced-scale enclosure, and they were putting big fires in the reduced-scale enclosure and measuring certain CO and other gases within blocks. And so we were trying to model that. And our big goal was to try to predict the CO that would build up in the upper layer of this flashed over compartment. That kept pushing the combustion modeling because if you want to actually predict CO as opposed to just specifying it, predict CO as opposed to just specifying it, you know, then you've got to now have something a little bit more sophisticated than fuel plus oxygen goes to products. Now we have to have something like fuel plus oxygen goes to, you know, some initial set of products. And then those initial set of products have to then combine with oxygen and to form the final set of products. That is, the CO has to oxidize and form CO2. And that's where the love species approach came into play, because we needed some way to account for all of these major, minor species without breaking the budget. Because in FDS, if you track all of these different species, fuel, oxygen, nitrogen, CO, CO2, water vapor, blah, blah, blah, blah, blah, you know, each of these is all trans water clays and then the cost of the calculations would get higher and higher and higher. So Jason was really the one who worked out, you know, the simplification of the kinetics to a point where you would have the minimum number of species that you would need to track. But once you get into underventilated combustion, you form CO and that sort of thing, basically now you have four species to track rather than three. You've got these two sets of products. The initial set has the CO in it, and then the secondary set has the CO2. And by developing, you mean like literally solving the equations on the blackboard, then figuring out how to transfer that into a code? How did you even write it? Well, Jason's very good with algebra. And you're a mathematician. I'm supposed to be the mathematician, but Patrician actually is really clever. And what this involves is you write down your basic equations where you have, okay, the fuel molecule plus oxygen plus nitrogen goes to X, Y, and Z. Well, now you have to lump these things together. And there's just a lot of algebra. And then when you start to code it up, you know, you have to make sure that, you know, all the atoms balance. And I've probably heard from people who try to run FDS in sort of primitive species mode that it's tricky just to figure out, you know, what are my stoichiometric coefficients for this, you know, complicated set of equations. I find it this, you know, complicated set of equations? I find it fascinating, you know, because I really like to put it in the timeline, you know. That was a time when people listened to Britney Spears and NSYNC, I guess. This is times where you surely could not go stack overflow and just, okay, give me, like, nice solution for this particular problem. You have to figure it out. You didn't have YouTube tutorials because there was no YouTube. I think the problem was is that a lot of, I mean, there's certainly a lot of people doing CFD related to combustion. Yeah. But a lot of them are doing these fundamental calculations where they don't have these loved species. They just literally track all of the major and minor species directly. It's computationally expensive, but it's a little bit easier in terms of a formulation. So for us often, the difficulty in programming FDS is we have to make these approximations to get things to work in a reasonable amount of time. Whereas sometimes, we just talk to combustion people, they'll say, well, why don't you just solve for everything explicitly and don't worry about the lung species? And we say, well, you know, we have to get our calculations done in a day or two, not a week or two or a month or two. Sometimes in the academic world, if your calculation takes some months to finish, well, so what? What came next? Pyrolysis? Suppression? Let's see. So pyrolysis came about, I'd say, next because, again, Simo Hostica, who had returned to Finland at that point, was starting to get interested in pyrolysis and wood in particular. I think in Finland, they're very interested in wood. It's an important part of their economy. And so he started to put the basic pyrolysis equations into FDS. And I also became quite interested in it. So he and I both started to work out the detailed kinetics models that one can choose to use in FDS today. But it was Simo who really pioneered that, and he was then just interested in doing simulations involving wood. A number of co-workers, Hannah McCarr was one who I remember, and she was also very interested in this. So I decided as long as Simo was interested in coding it up, I was more than happy to work with him. Fantastic. And suppression, how did you end up putting Lagrangian particles, water, and all the suppression stuff in it? Well, all the suppression stuff was around from the very beginning, even before we released FDS. We were doing these warehouse fires. So we had the Sprinkler model in place. But one of the things that we really wanted to do after we released FDS officially is we wanted to do more with droplet sizes and distribution and that sort of thing. and distribution and that sort of thing. There's a fellow named Dave Shepard who, for his graduate work, developed a fairly sophisticated treatment of water droplets that we built into FDS. The problem there, though, is that for any given sprinkler, it's very difficult to get the data that we would need for this sophisticated model. So, I mean, if you just go into unbuilding and look up and look at the sprinkler, there are an infinite number of different types of sprinklers. Each one has its own sort of characteristic spray pattern and droplet distribution size. And so we got to a point where we had to kind of keep in place the relatively simple model that we still use today simply because we don't have the details of any given sprinkler. I know it can be measured. I mean, one can go to a testing lab to measure these things, but that's a very expensive thing to do. And I've found by talking to a lot of the fire protectionists who use FDS, they're quite happy to have FDS predict when the sprinklers are going to activate, and they want to have a reasonable idea of where the water goes. But in terms of suppression, in terms of actually predicting if, you know, a pile of commodity that's burning is going to go out, that's still something that I don't think we can predict. I mean, we have rough empirical models in FDS to make some approximation as to how much the heat release rate will decrease when you throw water on something, but that's never really been something that we're going to be able to do reliably. We'll never be able to replace a full scale test in terms of predicting whether or not that burning pile of boxes is going to be put out by Frigler X, Y, or Z. Now I'm switching to the difficult question spot of the list. So I remember there was a thing around FDS4. It was the material database. And then when you move to FDS5, the material database has disappeared, causing always a collapse to a whole industry of fire safety engineering. So I would love to ask you, like, first about the development and the destruction of the material database and the role of default values in modeling, because these two things connect. Right. The original idea behind that database was just to put in, you know, some K row C for some basic materials, RIP, Gibson board. But over time, it started to creep, and we started to develop much more sophisticated property data that we put into that database. And then we just started adding numbers that came out of this paper or that paper or this handbook or wherever. The database started getting filled up with a lot of numbers that we really couldn't validate or verify. At this time, we were doing more and more work with regulatory authorities like in this country the nuclear regulatory commission and they were all very interested in validating these models because i mean they're essentially the authorities having jurisdiction and they want to have some idea as to how accurate these models are and question arose when we were starting to do the validation work is, okay, well, what do we do about these material properties? How do we, quote, unquote, validate them? I looked through the database, and I found that, you know, I really couldn't rigorously justify some of these numbers. I mean, some of them were just, you know, ballpark, order of magnitude guesses. And we started to notice that they were being used inappropriately. And cited. They were cited to your... Were being cited as sort of standard reference materials. And that's a problem here at NIST because we do have, as an agency, we have what are known as standard reference materials and standard reference data. And our material database was not that. Okay. It's a big deal when you stamp standard reference data onto something. I mean, the funniest thing that we sell peanut butter here. Did you ever hear that story about peanut butter? No, no, give me it. I wanted that. So NIST, you can buy for about $500 a jar peanut butter from NIST. Okay. And it's a standard reference material. It's used by food producers for measuring caloric content. So if you have an apparatus for measuring the caloric content of food, you can use the NIST peanut butter as a standard to make sure that your apparatus for measuring the calorie content of the food is okay. So the long story short is, we were not going through all of the necessary books to call our database of standard reference. So when we went to FDF5, we just decided that this was too much of a burden for us to take on. It's hard enough to maintain the code. We really weren't comfortable maintaining this database of material properties, especially when we were just pulling these numbers from just a whole variety of different sources. It's almost like, you know, going onto the web these days and just Google searching on something and clicking the number. I mean, that's really all our database was. And so, I'd rather have the end user pick a number off the web. And justify it, man. Justify it. And that's what the authority said to us. They said, look, when someone runs an FDS calculation and we review it, we will ask them where they came up with all these properties, and we don't want to hear from them that it just comes from the NIST database. I agree. I don't want to hear that either. Side question. Does it taste good? Is it better? No, it's terrible. Because it doesn't have the sugar, it doesn't have it's just like peanuts and oil. Okay. We discussed this material database. I had this discussion with Wolfram Jan a long, long time ago in the podcast about users using default values without giving it a serious thought. And you had to use some defaults in FTS. There's many defaults. There's specific smoke extinction coefficient default. There's a subtle default, I think. No, now you have to specify your reaction because you have taken away that from us. We even took that away because that was problematic, too. We don't know the smoke yield of your burning couch. I mean, that's something I haven't even heard of. Actually, this is a good example because half of the world was burning polyurethane because that was their default reaction. I forget what the default, I think the default reaction was propane. Yeah, yeah, sorry. Yeah, propane. But that was like... But there was polyurethane in this database that we had just pieced together from some experiments that were done here at NIST. And I can't even tell you, you know, in detail what that polyurethane consisted of, what kind of fabric was in it. It was just like a one-off from one test. We just were not comfortable clearing that to be a standard reference data. But now, okay, now there are still some defaults. I guess they are, like, you probably put a lot more attention into having them. But how do you feel about this user responsibility, like, from a developer perspective? I guess from your point of view, like, the user is fully responsible for choosing the numbers, whether they leave default or pick one. Do you have the impression that they actually do that? Well, they have to. For example, I was talking to someone the other day who was doing an analysis of a fire in some building, and he kept talking about the visibility. And I asked him, I said, well, what have you specified for the soot yield? And he didn't know what he was specifying for the soot yield. And I'm guessing if he didn't specify anything, then there's no soot at all, which means that the visibility is always going to be, you know, at its maximum. And so we decided that it was much better to sort of force the user to think about these things rather than to specify it. Because, I mean, let's face it, when I run a computer program, and I'm not talking about FDS, but some other, you know, program, I generally go with the default. Yeah. If I don't call any better, I'm just going to go with the default unless the program forces me to make a decision. Okay. And so we often argue amongst ourselves, to what extent do we want to force the users to make these decisions, or do we want to provide them with a default? And over the years, we've kind of come to this compromise. Like, for example, 35% is our default radius refraction. But that's, I mean, I'm trying to think what other, what other defaults do we have in there that the user doesn't have to really specify? Specific mass extinction coefficient is like 8,700. That's the number from Mulholland's research that no one touches, right? And that's a number that, I mean, we haven't seen anything better than that. So let's at least provide the best data that's out there. But then for other things like yield, CO yield, you know, those are things that we really think the user has to think about. Especially if they're doing a life safety simulation. So we've covered, I hope, quite thoroughly the first 10 years of FDS. FDS 5 came what, 2008, 2009? Something like that, right? Then FDS 6 came 2013, 2014. Also around that time, I guess some people were lucky to get into beta version. That was quite a long one as well. So how did the development of the modern versions look like? Because you had now a combustion model, you had a radiation model, you had pyrolysis model, you had the pressure model. At this point, was it like improving the models, making big changes? So as we went from FDS-5 to FDS-6, we were joined by Randy McDermott. Okay. And he, you know, he actually has a formal CFD background. Okay. And he, you know, he actually has a formal CFD background. Okay. You know, Jason, Simo, and I kind of learned it along. Randy actually had a very extensive background in CFD. You know, one of the things we asked him to do when he first came on board was just to like, look at everything in the code and start running, you know, verification tests. And we started running more validation tests. And we started to get a little bit more strict with the way we handled a lot of things. I mean, it's hard to go, I mean, there'd be a laundry list of different things. But Randy started to really apply a lot more rigor to what we were doing up to that point. Up to that point, you know, sometimes we were being a little bit fast and loose with some of the turbulence model boundary layer correlations. And Randy brought some discipline to that, introduced the whole concept of running verification case. And so that's, a lot of that went into FDS-6. You know, one of the major problems that we have with FDS-5 is that the algorithm at the time that we were using, which was the simplest form of the transport algorithm, would allow temperatures to drop down to extremely low values right around the fire. And, you know, to make a long story short, you have a situation where you go from like a really high temperature in the fire and then in just one or two grid cells, you're down to ambient temperature. So the temperature kind of goes through this dip. It's purely numerical. There's nothing physical about this at all. It's just that it's a numerical artifact. It's just part of that particular algorithm that we were using. Or it really, you know, got a lot of people bent out of shape. Our users did not like to see, you know, minus 10 degrees Celsius right next to a big fire. And we tried to explain that this was, you know, purely a numerical artifact. It doesn't affect the overall accuracy of the calculation, but still, it was a thorn in our side. And so we said to Randy, I said, Randy, what can we do about this? And he knew of more sophisticated transport algorithms that would eliminate this spurious low temperature. So those are the kinds of things that Randy brought to the table. A lot of it is under the hood. You don't notice a lot of this stuff, but it was absolutely necessary in order for us to continue because as we start using near flame temperatures for extinction and suppression and those sorts of things, if you have these fictitious values, you can't do anything. So we really needed to tighten up the basic algorithm before we could move on to other things. So we needed someone, we needed like a real CFD expert. You needed Randy. It's great you got him. Just had to do CFD. Fantastic. I remember from those times, a lot of discussion on JetFence and how the core is solved. I think you went to like two or three iterations of the LES model at the time. Yes. There was this case of having to put a pressure inlet every mesh to keep the background pressure. I mean, of course, things would... Well, another thing that Randy did is he coded up into FDS all of the most popular turbulence models. So when we say LES, there are about half a dozen different ways of representing the viscosity of the gas. You've heard of smagger density, that's one type, and then there's a variety of others. And Randy coded up every single one. and then there's a variety of others. And Randy coded up every single one. And then we ran all of our test cases with all of these different turbulence models. And the one that we came to, which is known as the Deardorff's model, the one we're using now, simply because over the wide range of our applications, this one performed the best. Fantastic. And now having this massive library of reference cases, you're in such a better position to understand any change to the code you do. Because from what I understood, every night you run the simulations again and again and again to see for errors, right? Right, right. We also run these validation cases. cases. So if we introduce some new variant of our extinction model, we can run half a dozen different test series and see, okay, are we improving or are we getting worse? And we can do that literally within a few days. Whereas before, something like this would be something a graduate student would spend two years doing. Now we can do it in a couple of days just because we have all of this stuff at the push of a button. So we just simply make the change in a text version of the code. We push the button. A couple days later, we look at the results and we can tell whether or not things are getting better or things are getting worse. How big is the team nowadays? So the core people, basically myself, Jason Floyd, Randy McDermott, a fellow named Marcus Veneer, who's working on the non-rectangular geometry. Simo Hasega and his students help out. Glenn Forty is doing SmokeView, plus a lot of the IT support. And then we have various other people. the IT support. And then we have various other people, Susan Tillian from Germany, for example, you know, sometimes works on the pressure solving features. But the day-to-day maintenance is myself, Jason Floyd, Randy, and Marcos. We're the ones, when you turn in an issue tracker, it's going to be one of us who takes it. Fantastic. Such a big, how to even say it, I mean, this is not important for fire science. This is fundamental for fire science. If tomorrow FDS disappeared, it would be like a stock market crash in the world of fire science and engineering. One of the reasons why we've put together this kind of elaborate set of online tools like the GitHub know, the GitHub, is that if we were all hit by a bus tomorrow, someone could step in and take over. I mean, that's the beauty of open source software. I mean, we do the day-to-day maintenance, but there are others who are kind of following us in a way, who, if we went away, they could step in and take it over. So we want to make sure that this thing lasts longer than just that. And I think the impact of the tool is tremendous. Okay, Kevin, that was fascinating to go through the development of FDS. I think you've cleared a lot of ideas about the origins and the solver and how it was built. It's a fantastic story. I was told it's a good story, and it truly is. So, yeah, thank you very much for coming to the show and even more. Thank you very much for building this for us. I enjoyed it. And that's it. Oh, man, so good. It was on the podcast bucket list to have Kevin talk about FDS on the air. And it finally happened, and I'm super happy to have conducted this interview. So many golden nuggets from the early days of FDS development, so many interesting insights, how the model grew, what powered this growth, and how it changed over the years. The most astonishing part, I think, is how it was built as an academic tool, and then it quickly was rediscovered as a commercial powerhouse. Now it's fueling so many companies around the world. So many people are basically FTS engineers nowadays. And that's great. That's great that the tool developed by scientists, powered by fire science, has found a way to fire engineering. What a better testament for fire science and the need of development of fundamental stuff in this field. What's a better example of how great investment fundamental fire science can be? If you really enjoyed this episode and you would love to hear Kevin once again, I have good news for you. So there's not only a Christmas special episode, but there's also, let's say, New Year's special episode coming your way next Wednesday, and that's Kevin McGrath again. And we're going to talk about an experiment that has certainly changed the fire science, and this experiment was the investigation after the World Trade Center collapse, which is also heavily tied into the development of FDS and how the software had to be changed to make this investigation a possibility. So I hope you will enjoy it as much as this episode. And for now, thank you very much for being here with me. Thank you for sharing your listener experience with me. I've received so much feedback through the listener experience survey. I'm very, very happy with that and very glad you did share that with me. I'm going to dedicate a half of the Q&A episode in early January answering some of the stuff. I cannot just reply with an email because it was kind of anonymous. But I'm going to reflect on what feedback I've received in the Q&A. And I'm going to tell you what I'm going to do with it. What's the outcome of this survey and what I have processed out of that. One of the feedback was to make this outro shorter. I seem to just fail incorporating that one, but I'll improve. I'll make this thing more concise in the future. Anyway, thank you very much for being here with me. Christmas is coming soon, so if you celebrate Christmas, Merry Christmas to you and your family. I hope you have a lovely time. If you don't celebrate Christmas, just have a great time around there. And I hope you find some joy and calmness and escape from the mad world that surrounds us in this special time. This year, not taking any Christmas break. I have a podcast prepared all the way into the new year. So next Wednesday, I see you here again. Thank you. Bye. This was the Fire Science Show. Thank you for listening and see you soon.